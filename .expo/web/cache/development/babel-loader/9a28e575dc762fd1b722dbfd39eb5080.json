{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\juttw\\\\Documents\\\\GitHub\\\\recipes-app-react-native\\\\src\\\\screens\\\\Signin\\\\SigninScreen.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Entypo } from '@expo/vector-icons';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport image from \"../../../assets/splash.png\";\nimport \"firebase/firestore\";\nimport firebase from \"firebase\";\n\nvar SignInScreen = function (_React$Component) {\n  _inherits(SignInScreen, _React$Component);\n\n  function SignInScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignInScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignInScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      errorMessage: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(SignInScreen, [{\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.props.navigation.navigate('Home');\n    }\n  }, {\n    key: \"onLoginFailure\",\n    value: function onLoginFailure(errorMessage) {\n      this.setState({\n        error: errorMessage,\n        loading: false\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.state.loading) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"signInWithEmail\",\n    value: function signInWithEmail() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function signInWithEmail$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                if (errorCode == 'auth/weak-password') {\n                  _this2.onLoginFailure.bind(_this2)('Wrong Password!');\n                } else {\n                  _this2.onLoginFailure.bind(_this2)(errorMessage);\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        style: {\n          marginBottom: 10\n        },\n        keyboardShouldPersistTaps: \"always\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: image,\n        PlaceholderContent: React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#B1B1B1\",\n        returnKeyType: \"next\",\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#B1B1B1\",\n        returnKeyType: \"done\",\n        textContentType: \"newPassword\",\n        secureTextEntry: true,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      })), this.renderLoading(), React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          textAlign: \"center\",\n          color: \"red\",\n          width: \"100%\",\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, this.state.error), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, React.createElement(Entypo.Button, {\n        name: \"login\",\n        size: 24,\n        color: \"white\",\n        backgroundColor: \"skyblue\",\n        onPress: function onPress() {\n          return _this3.signInWithEmail();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, \"Login\")), React.createElement(View, {\n        style: styles.footerView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, \"Don't have an account? \", React.createElement(Text, {\n        onPress: function onPress() {\n          _this3.props.navigation.navigate('Signup');\n        },\n        style: styles.footerLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, \"Signup\"))))));\n    }\n  }]);\n\n  return SignInScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: \"86%\",\n    marginTop: 15\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    paddingLeft: 10,\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 323\n  },\n  image: {\n    marginTop: 70,\n    height: 200,\n    width: 225,\n    alignSelf: \"center\",\n    margin: 30,\n    marginBottom: -10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"skyblue\",\n    marginLeft: 50,\n    marginRight: 50\n  },\n  googleButton: {\n    backgroundColor: \"#FFFFFF\",\n    height: 44,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 22,\n    borderWidth: 1,\n    borderColor: \"#707070\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 16,\n    color: '#2e2e2d'\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["C:/Users/juttw/Documents/GitHub/recipes-app-react-native/src/screens/Signin/SigninScreen.js"],"names":["React","Entypo","KeyboardAwareScrollView","image","firebase","SignInScreen","state","email","password","errorMessage","loading","props","navigation","navigate","setState","error","auth","signInWithEmailAndPassword","then","onLoginSuccess","bind","catch","errorCode","code","message","onLoginFailure","Keyboard","dismiss","styles","container","marginBottom","form","input","renderLoading","fontSize","textAlign","color","width","button","signInWithEmail","footerView","footerText","footerLink","Component","StyleSheet","create","flex","flexDirection","alignItems","backgroundColor","marginTop","height","borderRadius","overflow","marginLeft","marginRight","paddingLeft","borderColor","borderWidth","alignSelf","margin","googleButton","justifyContent","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  ActivityIndicator,\r\n  TouchableWithoutFeedback,\r\n  Keyboard\r\n} from \"react-native\";\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport image from '../../../assets/splash.png';\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase\";\r\n\r\nclass SignInScreen extends React.Component {\r\n  state = { email: '', password: '', errorMessage: '', loading: false };\r\n  onLoginSuccess() {\r\n    this.props.navigation.navigate('Home');\r\n  }\r\n  onLoginFailure(errorMessage) {\r\n    this.setState({ error: errorMessage, loading: false });\r\n  }\r\n  renderLoading() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <View>\r\n          <ActivityIndicator size={'large'} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  async signInWithEmail() {\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(this.onLoginSuccess.bind(this))\r\n      .catch(error => {\r\n          let errorCode = error.code;\r\n          let errorMessage = error.message;\r\n          if (errorCode == 'auth/weak-password') {\r\n              this.onLoginFailure.bind(this)('Wrong Password!');\r\n          } else {\r\n              this.onLoginFailure.bind(this)(errorMessage);\r\n          }\r\n      });\r\n  }\r\n  render() {\r\n    return ( \r\n        <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          Keyboard.dismiss();\r\n        }}\r\n      >\r\n         <KeyboardAvoidingView style={styles.container}>\r\n          <KeyboardAwareScrollView\r\n                style={{marginBottom: 10}}\r\n                keyboardShouldPersistTaps=\"always\">\r\n          <Image style={styles.image}\r\n                       source={ image }\r\n                       PlaceholderContent={<ActivityIndicator size='large' />}\r\n         />\r\n            <View style={styles.form}>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"next\"\r\n                keyboardType=\"email-address\"\r\n                textContentType=\"emailAddress\"\r\n                value={this.state.email}\r\n                onChangeText={email => this.setState({ email })}\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"done\"\r\n                textContentType=\"newPassword\"\r\n                secureTextEntry={true}\r\n                value={this.state.password}\r\n                onChangeText={password => this.setState({ password })}\r\n              />\r\n            </View>\r\n            {this.renderLoading()}\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                width: \"100%\",\r\n                marginBottom: 10\r\n              }}\r\n            >\r\n              {this.state.error}\r\n            </Text>\r\n            <View  style={styles.button}>\r\n                <Entypo.Button \r\n                name=\"login\" \r\n                size={24} \r\n                color=\"white\" \r\n                backgroundColor=\"skyblue\"\r\n                onPress={() => this.signInWithEmail()}\r\n                >\r\n                Login\r\n                </Entypo.Button>\r\n                </View>\r\n            <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Don't have an account? <Text onPress={() => {\r\n                  this.props.navigation.navigate('Signup');\r\n                }} style={styles.footerLink}>Signup</Text></Text>\r\n                </View>\r\n                </KeyboardAwareScrollView>\r\n        </KeyboardAvoidingView>\r\n        </TouchableWithoutFeedback>\r\n      \r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor:'#fff'\r\n  },\r\n  form: {\r\n    width: \"86%\",\r\n    marginTop: 15\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    backgroundColor: 'white',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    paddingLeft: 10, \r\n    height: 50,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    width: 323\r\n  },\r\n  image:{\r\n    marginTop:70,\r\n    height: 200,\r\n    width: 225,\r\n    alignSelf: \"center\",\r\n    margin: 30,\r\n    marginBottom: -10\r\n},\r\n    button: {\r\n    alignItems: \"center\",\r\n    backgroundColor:\"skyblue\",\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n  },\r\n  googleButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    height: 44,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 22,\r\n    borderWidth: 1,\r\n    borderColor: \"#707070\"\r\n  },\r\n  footerView: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    marginTop: 20\r\n},\r\nfooterText: {\r\n    fontSize: 16,\r\n    color: '#2e2e2d'\r\n},\r\nfooterLink:{\r\n    color: \"#788eec\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 16\r\n}\r\n});\r\nexport default SignInScreen;\r\n"]},"metadata":{},"sourceType":"module"}