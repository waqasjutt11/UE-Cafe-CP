{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\juttw\\\\Documents\\\\GitHub\\\\recipes-app-react-native\\\\src\\\\screens\\\\Categories\\\\CategoriesScreen.js\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { categories } from \"../../data/dataArrays\";\nimport { getNumberOfRecipes } from \"../../data/MockDataAPI\";\n\nvar CategoriesScreen = function (_React$Component) {\n  _inherits(CategoriesScreen, _React$Component);\n\n  function CategoriesScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoriesScreen).call(this, props));\n\n    _this.onPressCategory = function (item) {\n      var title = item.name;\n      var category = item;\n\n      _this.props.navigation.navigate('RecipesList', {\n        category: category,\n        title: title\n      });\n    };\n\n    _this.renderCategory = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressCategory(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.categoriesItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, React.createElement(Image, {\n        style: styles.categoriesPhoto,\n        source: {\n          uri: item.photo_url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }), React.createElement(Text, {\n        style: styles.categoriesName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.categoriesInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, getNumberOfRecipes(item.id), \" recipes\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, React.createElement(FlatList, {\n        data: categories,\n        renderItem: this.renderCategory,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }));\n    }\n  }]);\n\n  return CategoriesScreen;\n}(React.Component);\n\nCategoriesScreen.navigationOptions = {\n  title: 'Categories'\n};\nexport { CategoriesScreen as default };","map":{"version":3,"sources":["C:/Users/juttw/Documents/GitHub/recipes-app-react-native/src/screens/Categories/CategoriesScreen.js"],"names":["React","styles","categories","getNumberOfRecipes","CategoriesScreen","props","onPressCategory","item","title","name","category","navigation","navigate","renderCategory","categoriesItemContainer","categoriesPhoto","uri","photo_url","categoriesName","categoriesInfo","id","Component","navigationOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,kBAAT;;IAEqBC,gB;;;AAKnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAInBC,eAJmB,GAID,UAAAC,IAAI,EAAI;AACxB,UAAMC,KAAK,GAAGD,IAAI,CAACE,IAAnB;AACA,UAAMC,QAAQ,GAAGH,IAAjB;;AACA,YAAKF,KAAL,CAAWM,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B,EAA8C;AAAEF,QAAAA,QAAQ,EAARA,QAAF;AAAYF,QAAAA,KAAK,EAALA;AAAZ,OAA9C;AACD,KARkB;;AAAA,UAUnBK,cAVmB,GAUF;AAAA,UAAGN,IAAH,QAAGA,IAAH;AAAA,aACf,oBAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,qBAAlC;AAAwD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKD,eAAL,CAAqBC,IAArB,CAAN;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACa,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEb,MAAM,CAACc,eAArB;AAAsC,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAET,IAAI,CAACU;AAAZ,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACiB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCX,IAAI,CAACE,IAA1C,CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACkB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqChB,kBAAkB,CAACI,IAAI,CAACa,EAAN,CAAvD,aAHF,CADF,CADe;AAAA,KAVE;;AAAA;AAElB;;;;6BAkBQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAElB,UADR;AAEE,QAAA,UAAU,EAAE,KAAKW,cAFnB;AAGE,QAAA,YAAY,EAAE,sBAAAN,IAAI;AAAA,sBAAOA,IAAI,CAACa,EAAZ;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EAnC2CpB,KAAK,CAACqB,S;;AAA/BjB,gB,CACZkB,iB,GAAoB;AACzBd,EAAAA,KAAK,EAAE;AADkB,C;SADRJ,gB","sourcesContent":["import React from 'react';\r\nimport {\r\n  FlatList,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableHighlight\r\n} from 'react-native';\r\nimport styles from './styles';\r\nimport { categories } from '../../data/dataArrays';\r\nimport { getNumberOfRecipes } from '../../data/MockDataAPI';\r\n\r\nexport default class CategoriesScreen extends React.Component {\r\n  static navigationOptions = {\r\n    title: 'Categories'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onPressCategory = item => {\r\n    const title = item.name;\r\n    const category = item;\r\n    this.props.navigation.navigate('RecipesList', { category, title });\r\n  };\r\n\r\n  renderCategory = ({ item }) => (\r\n    <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressCategory(item)}>\r\n      <View style={styles.categoriesItemContainer}>\r\n        <Image style={styles.categoriesPhoto} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.categoriesName}>{item.name}</Text>\r\n        <Text style={styles.categoriesInfo}>{getNumberOfRecipes(item.id)} recipes</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          data={categories}\r\n          renderItem={this.renderCategory}\r\n          keyExtractor={item => `${item.id}`}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}