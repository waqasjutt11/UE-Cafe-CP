{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\juttw\\\\Documents\\\\GitHub\\\\recipes-app-react-native\\\\src\\\\screens\\\\Loading\\\\LoadingScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as firebase from 'firebase';\nimport { firebaseConfig } from \"./../../config\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoadingScreen).apply(this, arguments));\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this.props.navigation.navigate('Home');\n        } else {\n          _this.props.navigation.navigate('Signup');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"sources":["C:/Users/juttw/Documents/GitHub/recipes-app-react-native/src/screens/Loading/LoadingScreen.js"],"names":["React","firebase","firebaseConfig","apps","length","initializeApp","LoadingScreen","auth","onAuthStateChanged","user","props","navigation","navigate","styles","container","Component","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,cAAT;;AACA,IAAI,CAACD,QAAQ,CAACE,IAAT,CAAcC,MAAnB,EAA2B;AACvBH,EAAAA,QAAQ,CAACI,aAAT,CAAuBH,cAAvB;AACH;;IAEKI,a;;;;;;;;;;;wCACkB;AAAA;;AAChBL,MAAAA,QAAQ,CAACM,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACvC,YAAIA,IAAJ,EAAU;AACV,UAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B;AACC,SAFD,MAEO;AACP,UAAA,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACC;AACJ,OAND;AAOH;;;6BACQ;AACL,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA;AAKH;;;;EAhBuBd,KAAK,CAACe,S;;AAkBlC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AADkB,CAAlB,CAAf;AAOA,eAAed,aAAf","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport * as firebase from 'firebase';\r\nimport { firebaseConfig } from './../../config';\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nclass LoadingScreen extends React.Component {\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n            this.props.navigation.navigate('Home');\r\n            } else {\r\n            this.props.navigation.navigate('Signup');\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n        <View style={styles.container}>\r\n            <ActivityIndicator size=\"large\" />\r\n        </View>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n});\r\nexport default LoadingScreen;"]},"metadata":{},"sourceType":"module"}