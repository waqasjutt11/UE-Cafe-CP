{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juttw\\\\Documents\\\\GitHub\\\\recipes-app-react-native\\\\src\\\\screens\\\\Signin\\\\SigninScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Entypo } from '@expo/vector-icons';\nimport image from \"./../../../assets/splash.png\";\nimport { firebase } from \"../../config\";\nexport default function SigninScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Registration');\n  };\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert(\"User does not exist anymore.\");\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        navigation.navigate('./HomeScreen', {\n          user: user\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: image,\n    PlaceholderContent: React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }), React.createElement(View, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, \"Login\")), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    }\n  }, React.createElement(Entypo.Button, {\n    name: \"login\",\n    size: 24,\n    color: \"white\",\n    backgroundColor: \"skyblue\",\n    onPress: onLoginPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }, \"Login\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }, \"Don't have an account? \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }, \"Sign up\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 200,\n    width: 225,\n    alignSelf: \"center\",\n    marginBottom: 0,\n    marginTop: 80\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    paddingLeft: 16,\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1\n  },\n  loginText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginLeft: 20\n  },\n  button: {\n    backgroundColor: \"skyblue\",\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 16,\n    color: '#2e2e2d'\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/juttw/Documents/GitHub/recipes-app-react-native/src/screens/Signin/SigninScreen.js"],"names":["React","useState","KeyboardAwareScrollView","Entypo","image","firebase","SigninScreen","navigation","email","setEmail","password","setPassword","onFooterLinkPress","navigate","onLoginPress","auth","signInWithEmailAndPassword","then","response","uid","user","usersRef","firestore","collection","doc","get","firestoreDocument","exists","alert","data","catch","error","styles","container","flex","width","loginText","input","text","button","footerView","footerText","footerLink","StyleSheet","create","backgroundColor","alignItems","justifyContent","height","alignSelf","marginBottom","marginTop","borderRadius","overflow","marginLeft","marginRight","paddingLeft","borderColor","borderWidth","fontSize","fontWeight","buttonTitle","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Image, Text, TextInput, View, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport image from './../../../assets/splash.png';\r\nimport {firebase} from '../../config';\r\nexport default function SigninScreen({navigation}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Registration')\r\n    }\r\n\r\n    const onLoginPress = () => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then(firestoreDocument => {\r\n                        if (!firestoreDocument.exists) {\r\n                            alert(\"User does not exist anymore.\")\r\n                            return;\r\n                        }\r\n                        const user = firestoreDocument.data()\r\n                        navigation.navigate('./HomeScreen', {user})\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n        \r\n\r\n    return (\r\n      <View style={styles.container} >\r\n           <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                    <Image style={styles.image}\r\n                       source={ image }\r\n                       PlaceholderContent={<ActivityIndicator size='large'/>} \r\n                    />\r\n                    <View style={styles.loginText}>\r\n                        <Text >\r\n                            Login\r\n                        </Text>\r\n                    </View>\r\n                    <TextInput\r\n                     style={styles.input}\r\n                     placeholder='E-mail'\r\n                     placeholderTextColor=\"#aaaaaa\"\r\n                     onChangeText={(text) => setEmail(text)}\r\n                     value={email}\r\n                     underlineColorAndroid=\"transparent\"\r\n                     autoCapitalize=\"none\"\r\n                />\r\n                 <TextInput\r\n                   style={styles.input}\r\n                   placeholderTextColor=\"#aaaaaa\"\r\n                   secureTextEntry\r\n                   placeholder='Password'\r\n                   onChangeText={(text) => setPassword(text)}\r\n                   value={password}\r\n                   underlineColorAndroid=\"transparent\"\r\n                   autoCapitalize=\"none\"\r\n                />\r\n                <View  style={styles.button}>\r\n                <Entypo.Button \r\n                name=\"login\" \r\n                size={24} \r\n                color=\"white\" \r\n                backgroundColor=\"skyblue\"\r\n                onPress={onLoginPress}\r\n                >\r\n                Login\r\n                </Entypo.Button>\r\n                </View>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Don't have an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Sign up</Text></Text>\r\n                </View>\r\n                </KeyboardAwareScrollView>\r\n        \r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    image:{\r\n        \r\n        height: 200,\r\n        width: 225,\r\n        alignSelf: \"center\",\r\n        marginBottom:0,\r\n        marginTop:80\r\n    },\r\n    input:{\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        paddingLeft: 16, \r\n        height: 50,\r\n        borderColor: 'gray',\r\n        borderWidth: 1\r\n    },\r\n    loginText:{\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        marginLeft:20\r\n\r\n    },\r\n    button: {\r\n        backgroundColor:\"skyblue\",\r\n        marginLeft: 50,\r\n        marginRight: 50,\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n        \r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize: 16,\r\n        color: '#2e2e2d'\r\n    },\r\n    footerLink:{\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}